(function() {var type_impls = {
"rerun":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SizeBytes-for-(T,+U)\" class=\"impl\"><a class=\"src rightside\" href=\"src/re_types_core/size_bytes.rs.html#217-220\">source</a><a href=\"#impl-SizeBytes-for-(T,+U)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"rerun/trait.SizeBytes.html\" title=\"trait rerun::SizeBytes\">SizeBytes</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(T, U)</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"rerun/trait.SizeBytes.html\" title=\"trait rerun::SizeBytes\">SizeBytes</a>,\n    U: <a class=\"trait\" href=\"rerun/trait.SizeBytes.html\" title=\"trait rerun::SizeBytes\">SizeBytes</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.heap_size_bytes\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/re_types_core/size_bytes.rs.html#223\">source</a><a href=\"#method.heap_size_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rerun/trait.SizeBytes.html#tymethod.heap_size_bytes\" class=\"fn\">heap_size_bytes</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Returns the total size of <code>self</code> on the heap, in bytes.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_pod\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/re_types_core/size_bytes.rs.html#229\">source</a><a href=\"#method.is_pod\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rerun/trait.SizeBytes.html#method.is_pod\" class=\"fn\">is_pod</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is <code>Self</code> just plain old data? <a href=\"rerun/trait.SizeBytes.html#method.is_pod\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.total_size_bytes\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/re_types_core/size_bytes.rs.html#16\">source</a><a href=\"#method.total_size_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rerun/trait.SizeBytes.html#method.total_size_bytes\" class=\"fn\">total_size_bytes</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Returns the total size of <code>self</code> in bytes, accounting for both stack and heap space.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.stack_size_bytes\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/re_types_core/size_bytes.rs.html#24\">source</a><a href=\"#method.stack_size_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rerun/trait.SizeBytes.html#method.stack_size_bytes\" class=\"fn\">stack_size_bytes</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Returns the total size of <code>self</code> on the stack, in bytes. <a href=\"rerun/trait.SizeBytes.html#method.stack_size_bytes\">Read more</a></div></details></div></details>","SizeBytes","rerun::external::eframe::egui_wgpu::wgpu::core::device::BufferMapPendingClosure","rerun::external::eframe::egui_wgpu::wgpu::core::naga::SpanContext"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiSliceArg%3C'a,+A,+D%3E-for-(I0,+I1)\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/ndarray/0.15/src/ndarray/slice.rs.html#968\">source</a><a href=\"#impl-MultiSliceArg%3C'a,+A,+D%3E-for-(I0,+I1)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, A, D, I0, I1&gt; <a class=\"trait\" href=\"rerun/external/ndarray/trait.MultiSliceArg.html\" title=\"trait rerun::external::ndarray::MultiSliceArg\">MultiSliceArg</a>&lt;'a, A, D&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(I0, I1)</a><div class=\"where\">where\n    A: 'a,\n    D: <a class=\"trait\" href=\"rerun/external/ndarray/trait.Dimension.html\" title=\"trait rerun::external::ndarray::Dimension\">Dimension</a>,\n    I0: <a class=\"trait\" href=\"rerun/external/ndarray/trait.SliceArg.html\" title=\"trait rerun::external::ndarray::SliceArg\">SliceArg</a>&lt;D&gt;,\n    I1: <a class=\"trait\" href=\"rerun/external/ndarray/trait.SliceArg.html\" title=\"trait rerun::external::ndarray::SliceArg\">SliceArg</a>&lt;D&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"rerun/external/ndarray/trait.MultiSliceArg.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = (<a class=\"struct\" href=\"rerun/external/ndarray/struct.ArrayBase.html\" title=\"struct rerun::external::ndarray::ArrayBase\">ArrayBase</a>&lt;<a class=\"struct\" href=\"rerun/external/ndarray/struct.ViewRepr.html\" title=\"struct rerun::external::ndarray::ViewRepr\">ViewRepr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.reference.html\">&amp;'a mut A</a>&gt;, &lt;I0 as <a class=\"trait\" href=\"rerun/external/ndarray/trait.SliceArg.html\" title=\"trait rerun::external::ndarray::SliceArg\">SliceArg</a>&lt;D&gt;&gt;::<a class=\"associatedtype\" href=\"rerun/external/ndarray/trait.SliceArg.html#associatedtype.OutDim\" title=\"type rerun::external::ndarray::SliceArg::OutDim\">OutDim</a>&gt;, <a class=\"struct\" href=\"rerun/external/ndarray/struct.ArrayBase.html\" title=\"struct rerun::external::ndarray::ArrayBase\">ArrayBase</a>&lt;<a class=\"struct\" href=\"rerun/external/ndarray/struct.ViewRepr.html\" title=\"struct rerun::external::ndarray::ViewRepr\">ViewRepr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.reference.html\">&amp;'a mut A</a>&gt;, &lt;I1 as <a class=\"trait\" href=\"rerun/external/ndarray/trait.SliceArg.html\" title=\"trait rerun::external::ndarray::SliceArg\">SliceArg</a>&lt;D&gt;&gt;::<a class=\"associatedtype\" href=\"rerun/external/ndarray/trait.SliceArg.html#associatedtype.OutDim\" title=\"type rerun::external::ndarray::SliceArg::OutDim\">OutDim</a>&gt;)</h4></section></summary><div class='docblock'>The type of the slices created by <code>.multi_slice_move()</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.multi_slice_move\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/ndarray/0.15/src/ndarray/slice.rs.html#968\">source</a><a href=\"#method.multi_slice_move\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rerun/external/ndarray/trait.MultiSliceArg.html#tymethod.multi_slice_move\" class=\"fn\">multi_slice_move</a>(\n    &amp;self,\n    view: <a class=\"struct\" href=\"rerun/external/ndarray/struct.ArrayBase.html\" title=\"struct rerun::external::ndarray::ArrayBase\">ArrayBase</a>&lt;<a class=\"struct\" href=\"rerun/external/ndarray/struct.ViewRepr.html\" title=\"struct rerun::external::ndarray::ViewRepr\">ViewRepr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.reference.html\">&amp;'a mut A</a>&gt;, D&gt;\n) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(I0, I1)</a> as <a class=\"trait\" href=\"rerun/external/ndarray/trait.MultiSliceArg.html\" title=\"trait rerun::external::ndarray::MultiSliceArg\">MultiSliceArg</a>&lt;'a, A, D&gt;&gt;::<a class=\"associatedtype\" href=\"rerun/external/ndarray/trait.MultiSliceArg.html#associatedtype.Output\" title=\"type rerun::external::ndarray::MultiSliceArg::Output\">Output</a></h4></section></summary><div class='docblock'>Split the view into multiple disjoint slices. <a href=\"rerun/external/ndarray/trait.MultiSliceArg.html#tymethod.multi_slice_move\">Read more</a></div></details></div></details>","MultiSliceArg<'a, A, D>","rerun::external::eframe::egui_wgpu::wgpu::core::device::BufferMapPendingClosure","rerun::external::eframe::egui_wgpu::wgpu::core::naga::SpanContext"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()